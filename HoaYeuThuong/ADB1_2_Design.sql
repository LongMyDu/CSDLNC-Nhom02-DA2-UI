ALTER DATABASE DB_HOAYEUTHUONG
SET SINGLE_USER WITH ROLLBACK IMMEDIATE
USE master
DROP DATABASE DB_HOAYEUTHUONG
GO
CREATE DATABASE DB_HOAYEUTHUONG
GO

USE DB_HOAYEUTHUONG
GO

-- PHẦN 1: TẠO BẢNG
CREATE TABLE KHACHHANG (
  MaKH       int IDENTITY NOT NULL, 
  EmailKH    nvarchar(50) NULL, 
  MatKhauKH  varchar(20) NULL, 
  HoKH       nvarchar(20) NULL, 
  TenKH      nvarchar(20) NULL, 
  SdtKH      char(10) NULL, 
  SoNhaKH    nvarchar(100) NULL, 
  QuanKH     nvarchar(20) NULL, 
  ThanhPhoKH nvarchar(20) NULL, 
  QuocGiaKH  nvarchar(20) NULL, 
  PRIMARY KEY (MaKH)
);

CREATE TABLE PHIEUXINNHAPHANG (
  MaPXNH       int IDENTITY NOT NULL, 
  NgayLap      date NULL, 
  CHINHANHMaCN int NULL, 
  PRIMARY KEY (MaPXNH)
);

CREATE TABLE CHINHANH (
  MaCN         int IDENTITY NOT NULL, 
  SdtCN        char(10) NULL, 
  SoNhaCN      nvarchar(100) NULL, 
  QuanCN       nvarchar(20) NULL, 
  ThanhPhoCN   nvarchar(20) NULL, 
  NHANVIENMaNV int NULL, 
  PRIMARY KEY (MaCN)
);

CREATE TABLE NHANVIEN (
  MaNV               int IDENTITY NOT NULL, 
  HoNV               nvarchar(20) NULL, 
  TenNV              nvarchar(20) NULL, 
  GioiTinhNV         nvarchar(3) NULL, 
  SdtNV              char(10) NULL, 
  NgaySinhNV         date NULL, 
  DiaChiNV           nvarchar(100) NULL, 
  CmndNV             char(12) NULL UNIQUE, 
  TthdNV             nvarchar(20) NULL, 
  MucLuongNV         int NULL, 
  SoNgayPhepConLaiNV int NULL, 
  CHINHANHMaCN       int NULL, 
  LOAINHANVIENMaLNV  int NULL, 
  PRIMARY KEY (MaNV),
  CHECK (GioiTinhNV IN (N'Nam',N'Nữ')),
  CHECK (TthdNV IN (N'Đang hoạt động', N'Tạm nghỉ', N'Đã nghỉ')),
  CHECK (MucLuongNV > 0),
  CHECK (SoNgayPhepConLaiNV <= 12 AND SoNgayPhepConLaiNV >= 0)
);

CREATE TABLE LOAINHANVIEN (
  MaLNV  int IDENTITY NOT NULL, 
  TenLNV nvarchar(50) NULL, 
  PRIMARY KEY (MaLNV)
);

CREATE TABLE HOATUOI (
  MaHT          int IDENTITY NOT NULL, 
  TenHT         nvarchar(50) NULL, 
  YNghiaHT      nvarchar(100) NULL, 
  GiaBan        bigint NULL, 
  GiaBanSauGiam bigint NULL, 
  GiaNhap       bigint NULL, 
  MAUSACMaMau   int NULL, 
  PRIMARY KEY (MaHT),
  CHECK (GiaBan > GiaBanSauGiam AND GiaBanSauGiam > 0),
  CHECK (GiaNhap > 0)
);

CREATE TABLE MAUSAC (
  MaMau  int IDENTITY NOT NULL, 
  TenMau nvarchar(20) NULL, 
  PRIMARY KEY (MaMau)
);

CREATE TABLE SANPHAMQUATANG (
  MaSPQT        int IDENTITY NOT NULL, 
  TenSPQT       nvarchar(50) NULL, 
  MieuTaSPQT    nvarchar(100) NULL, 
  GiaBan        bigint NULL, 
  GiaBanSauGiam bigint NULL, 
  CHUDEMaCD     int NULL, 
  PRIMARY KEY (MaSPQT),
  CHECK (GiaBan > GiaBanSauGiam AND GiaBanSauGiam > 0)
);

CREATE TABLE CHUDE (
  MaCD  int IDENTITY NOT NULL, 
  TenCD nvarchar(20) NULL, 
  PRIMARY KEY (MaCD)
);

CREATE TABLE DOITAC (
  MaDT     int IDENTITY NOT NULL, 
  TenDT    nvarchar(50) NULL, 
  SdtDT    char(10) NULL, 
  DiaChiDT nvarchar(100) NULL, 
  PRIMARY KEY (MaDT)
);

CREATE TABLE SANPHAMMUAKEM (
  MaSPMK     int IDENTITY NOT NULL, 
  TenSPMK    nvarchar(50) NULL, 
  MieuTaSPMK nvarchar(100) NULL, 
  GiaBan     bigint NULL, 
  DOITACMaDT int NULL, 
  PRIMARY KEY (MaSPMK),
  CHECK (GiaBan > 0),
);

CREATE TABLE VATLIEU (
  MaVL    int IDENTITY NOT NULL, 
  TenVL   nvarchar(20) NULL, 
  GiaNhap bigint NULL, 
  PRIMARY KEY (MaVL),
  CHECK (GiaNhap > 0),
);

CREATE TABLE PHIEUDATHANG (
  MaPDH   int IDENTITY NOT NULL, 
  NgayDat date NULL, 
  PRIMARY KEY (MaPDH)
);

CREATE TABLE PHIEUNHANHANG (
  MaPNH        int IDENTITY NOT NULL, 
  NgayNhan     date NULL, 
  NHANVIENMaNV int NULL, 
  TongTien     bigint NULL, 
  PRIMARY KEY (MaPNH)
);

CREATE TABLE PHIEUPHANPHOI (
  MaPPP        int IDENTITY NOT NULL, 
  NgayPhanPhoi date NULL, 
  NHANVIENMaNV int NULL, 
  CHINHANHMaCN int NULL, 
  PRIMARY KEY (MaPPP)
);

CREATE TABLE NHANVIENCAMHOA (
  MaNV           int NOT NULL, 
  MucDoThanhThao int NULL, 
  PRIMARY KEY (MaNV),
  CHECK (MucDoThanhThao IN (1,2,3,4)),
);

CREATE TABLE DONDATHANG (
  MaDDH                int IDENTITY NOT NULL, 
  HoTenNM              nvarchar(50) NULL, 
  SdtNM                char(10) NULL, 
  EmailNM              nvarchar(50) NULL, 
  DiaChiNM             nvarchar(100) NULL, 
  HoTenNN              nvarchar(50) NULL, 
  SdtNN                char(10) NULL, 
  SoNhaNN              nvarchar(100) NULL, 
  QuanNN               nvarchar(20) NULL, 
  ThanhPhoNN           nvarchar(20) NULL, 
  ThoiGianGiao         datetime NULL, 
  LoiNhanNN            nvarchar(50) NULL, 
  LoiNhanCH            nvarchar(50) NULL, 
  HTThanhToan          nvarchar(50) NULL, 
  PhiVanChuyen         bigint NULL, 
  TinhTrangDH          nvarchar(30) NULL, 
  TinhTrangTT          nvarchar(30) NULL, 
  MaKH                 int NULL, 
  NHANVIENCAMHOAMaNV   int NULL, 
  NHANVIENGIAOHANGMaNV int NULL, 
  VOUCHERMaVoucher     char(10) NULL, 
  CHINHANHMaCN         int NULL, 
  TongTien             bigint NULL, 
  PRIMARY KEY (MaDDH),
  CHECK (HTThanhToan IN (N'Tiền mặt', N'Thẻ ATM nội địa', N'Thẻ thanh toán quốc tế', N'PayPal', N'Ví điện tử')),
  CHECK (PhiVanChuyen >= 0),
  CHECK (TinhTrangDH IN (N'Đã tiếp nhận', N'Đang cắm hoa', N'Đã cắm xong', N'Đang giao hàng', N'Giao hàng thành công')),
  CHECK (TinhTrangTT IN (N'Đã thanh toán', N'Chưa thanh toán')),
);

CREATE TABLE NHANVIENGIAOHANG (
  MaNV     int NOT NULL, 
  BienSo   char(12) NULL UNIQUE, 
  KhuVucHD nvarchar(20) NULL, 
  PRIMARY KEY (MaNV)
);

CREATE TABLE VOUCHER (
  MaVoucher        char(10) NOT NULL, 
  LuotSuDungConLai int NULL, 
  SoTienGiam       bigint NULL, 
  PRIMARY KEY (MaVoucher),
  CHECK (LuotSuDungConLai >= 0),
  CHECK (SoTienGiam >= 0),
);

CREATE TABLE PHIEUPHANHOI (
  MaPPH         int IDENTITY NOT NULL, 
  NgayLap       date NULL, 
  NoiDung       nvarchar(500) NULL, 
  TenKH         nvarchar(20) NULL, 
  EmailKH       nvarchar(50) NULL, 
  SdtKH         char(10) NULL, 
  TinhTrang     nvarchar(20) NULL, 
  KHACHHANGMaKH int NULL, 
  PRIMARY KEY (MaPPH),
  CHECK (TinhTrang IN (N'Đã giải quyết', N'Đang giải quyết', N'Chưa giải quyết'))
);

CREATE TABLE MUA_SPMK (
  DONDATHANGMaDDH     int NOT NULL, 
  SANPHAMMUAKEMMaSPMK int NOT NULL, 
  DonGia              bigint NULL, 
  SoLuong             int NULL, 
  PRIMARY KEY (DONDATHANGMaDDH, SANPHAMMUAKEMMaSPMK),
  CHECK (DonGia > 0),
  CHECK (SoLuong > 0),
);

CREATE TABLE MUA_SPQT (
  DONDATHANGMaDDH      int NOT NULL, 
  SANPHAMQUATANGMaSPQT int NOT NULL, 
  DonGia               bigint NULL, 
  SoLuong              int NULL, 
  PRIMARY KEY (DONDATHANGMaDDH, SANPHAMQUATANGMaSPQT),
  CHECK (DonGia > 0),
  CHECK (SoLuong > 0),
);

CREATE TABLE MUA_HOATUOI (
  DONDATHANGMaDDH int NOT NULL, 
  HOATUOIMaHT     int NOT NULL, 
  DonGia          bigint NULL, 
  SoLuong         int NULL, 
  PRIMARY KEY (DONDATHANGMaDDH, HOATUOIMaHT),
  CHECK (DonGia > 0),
  CHECK (SoLuong > 0),
);

CREATE TABLE VATLIEU_SPQT (
  VATLIEUMaVL          int NOT NULL, 
  SANPHAMQUATANGMaSPQT int NOT NULL, 
  PRIMARY KEY (VATLIEUMaVL, SANPHAMQUATANGMaSPQT)
);

CREATE TABLE NHAN_VATLIEU (
  PHIEUNHANHANGMaPNH int NOT NULL, 
  VATLIEUMaVL        int NOT NULL, 
  DonGia             bigint NULL, 
  SoLuong            int NULL, 
  PRIMARY KEY (PHIEUNHANHANGMaPNH, VATLIEUMaVL),
  CHECK (DonGia > 0),
  CHECK (SoLuong > 0),
);

CREATE TABLE DAT_VATLIEU (
  PHIEUDATHANGMaPDH int NOT NULL, 
  VATLIEUMaVL       int NOT NULL, 
  SoLuong           int NULL, 
  PRIMARY KEY (PHIEUDATHANGMaPDH, VATLIEUMaVL),
  CHECK (SoLuong > 0),
);

CREATE TABLE XINNHAP_VATLIEU (
  PHIEUXINNHAPHANGMaPXNH int NOT NULL, 
  VATLIEUMaVL            int NOT NULL, 
  SoLuong                int NULL, 
  PRIMARY KEY (PHIEUXINNHAPHANGMaPXNH, VATLIEUMaVL),
  CHECK (SoLuong > 0),
);

CREATE TABLE PHANPHOI_VATLIEU (
  PHIEUPHANPHOIMaPPP int NOT NULL, 
  VATLIEUMaVL        int NOT NULL, 
  SoLuong            int NULL, 
  PRIMARY KEY (PHIEUPHANPHOIMaPPP, VATLIEUMaVL),
  CHECK (SoLuong > 0),
);

CREATE TABLE NHAN_HOATUOI (
  PHIEUNHANHANGMaPNH int NOT NULL, 
  HOATUOIMaHT        int NOT NULL, 
  DonGia             bigint NULL, 
  SoLuong            int NULL, 
  PRIMARY KEY (PHIEUNHANHANGMaPNH, HOATUOIMaHT),
  CHECK (DonGia > 0),
  CHECK (SoLuong > 0),
);

CREATE TABLE DAT_HOATUOI (
  PHIEUDATHANGMaPDH int NOT NULL, 
  HOATUOIMaHT       int NOT NULL, 
  SoLuong           int NULL, 
  PRIMARY KEY (PHIEUDATHANGMaPDH, HOATUOIMaHT),
  CHECK (SoLuong > 0),
);

CREATE TABLE XINNHAP_HOATUOI (
  PHIEUXINNHAPHANGMaPXNH int NOT NULL, 
  HOATUOIMaHT            int NOT NULL, 
  SoLuong                int NULL, 
  PRIMARY KEY (PHIEUXINNHAPHANGMaPXNH, HOATUOIMaHT),
  CHECK (SoLuong > 0),
);

CREATE TABLE PHANPHOI_HOATUOI (
  PHIEUPHANPHOIMaPPP int NOT NULL, 
  HOATUOIMaHT        int NOT NULL, 
  SoLuong            int NULL, 
  PRIMARY KEY (PHIEUPHANPHOIMaPPP, HOATUOIMaHT),
  CHECK (SoLuong > 0),
);

CREATE TABLE HOATUOI_SPQT (
  HOATUOIMaHT          int NOT NULL, 
  SANPHAMQUATANGMaSPQT int NOT NULL, 
  PRIMARY KEY (HOATUOIMaHT, SANPHAMQUATANGMaSPQT)
);

-- PHẦN 2: TẠO INDEX
CREATE NONCLUSTERED INDEX PHIEUXINNHAPHANG 
  ON PHIEUXINNHAPHANG (NgayLap);
CREATE NONCLUSTERED INDEX HOATUOI 
  ON HOATUOI (MAUSACMaMau);
CREATE NONCLUSTERED INDEX SANPHAMQUATANG 
  ON SANPHAMQUATANG (CHUDEMaCD);
CREATE NONCLUSTERED INDEX SANPHAMQUATANG2 
  ON SANPHAMQUATANG (GiaBan);
CREATE NONCLUSTERED INDEX DONDATHANG 
  ON DONDATHANG (TinhTrangDH);
CREATE NONCLUSTERED INDEX DONDATHANG2 
  ON DONDATHANG (CHINHANHMaCN);
CREATE NONCLUSTERED INDEX PHIEUPHANHOI 
  ON PHIEUPHANHOI (TinhTrang);

-- PHẦN 3: TẠO KHÓA NGOẠI
ALTER TABLE PHIEUXINNHAPHANG ADD CONSTRAINT FKPHIEUXINNH515799 FOREIGN KEY (CHINHANHMaCN) REFERENCES CHINHANH (MaCN);
ALTER TABLE CHINHANH ADD CONSTRAINT [Quản lý] FOREIGN KEY (NHANVIENMaNV) REFERENCES NHANVIEN (MaNV);
ALTER TABLE NHANVIEN ADD CONSTRAINT FKNHANVIEN530472 FOREIGN KEY (CHINHANHMaCN) REFERENCES CHINHANH (MaCN);
ALTER TABLE NHANVIEN ADD CONSTRAINT FKNHANVIEN171233 FOREIGN KEY (LOAINHANVIENMaLNV) REFERENCES LOAINHANVIEN (MaLNV);
ALTER TABLE HOATUOI ADD CONSTRAINT FKHOATUOI515393 FOREIGN KEY (MAUSACMaMau) REFERENCES MAUSAC (MaMau);
ALTER TABLE SANPHAMQUATANG ADD CONSTRAINT FKSANPHAMQUA629054 FOREIGN KEY (CHUDEMaCD) REFERENCES CHUDE (MaCD);
ALTER TABLE SANPHAMMUAKEM ADD CONSTRAINT FKSANPHAMMUA996269 FOREIGN KEY (DOITACMaDT) REFERENCES DOITAC (MaDT);
ALTER TABLE PHIEUNHANHANG ADD CONSTRAINT FKPHIEUNHANH923391 FOREIGN KEY (NHANVIENMaNV) REFERENCES NHANVIEN (MaNV);
ALTER TABLE PHIEUPHANPHOI ADD CONSTRAINT FKPHIEUPHANP178955 FOREIGN KEY (NHANVIENMaNV) REFERENCES NHANVIEN (MaNV);
ALTER TABLE PHIEUPHANPHOI ADD CONSTRAINT FKPHIEUPHANP822027 FOREIGN KEY (CHINHANHMaCN) REFERENCES CHINHANH (MaCN);
ALTER TABLE NHANVIENCAMHOA ADD CONSTRAINT FKNHANVIENCA199318 FOREIGN KEY (MaNV) REFERENCES NHANVIEN (MaNV);
ALTER TABLE DONDATHANG ADD CONSTRAINT FKDONDATHANG638513 FOREIGN KEY (MaKH) REFERENCES KHACHHANG (MaKH);
ALTER TABLE DONDATHANG ADD CONSTRAINT FKDONDATHANG432590 FOREIGN KEY (NHANVIENCAMHOAMaNV) REFERENCES NHANVIENCAMHOA (MaNV);
ALTER TABLE DONDATHANG ADD CONSTRAINT FKDONDATHANG256814 FOREIGN KEY (NHANVIENGIAOHANGMaNV) REFERENCES NHANVIENGIAOHANG (MaNV);
ALTER TABLE NHANVIENGIAOHANG ADD CONSTRAINT FKNHANVIENGI266456 FOREIGN KEY (MaNV) REFERENCES NHANVIEN (MaNV);
ALTER TABLE DONDATHANG ADD CONSTRAINT FKDONDATHANG294118 FOREIGN KEY (VOUCHERMaVoucher) REFERENCES VOUCHER (MaVoucher);
ALTER TABLE DONDATHANG ADD CONSTRAINT FKDONDATHANG600636 FOREIGN KEY (CHINHANHMaCN) REFERENCES CHINHANH (MaCN);
ALTER TABLE PHIEUPHANHOI ADD CONSTRAINT FKPHIEUPHANH258457 FOREIGN KEY (KHACHHANGMaKH) REFERENCES KHACHHANG (MaKH);
ALTER TABLE MUA_SPMK ADD CONSTRAINT FKMUA_SPMK608129 FOREIGN KEY (SANPHAMMUAKEMMaSPMK) REFERENCES SANPHAMMUAKEM (MaSPMK);
ALTER TABLE MUA_SPMK ADD CONSTRAINT FKMUA_SPMK59884 FOREIGN KEY (DONDATHANGMaDDH) REFERENCES DONDATHANG (MaDDH);
ALTER TABLE MUA_SPQT ADD CONSTRAINT FKMUA_SPQT338499 FOREIGN KEY (SANPHAMQUATANGMaSPQT) REFERENCES SANPHAMQUATANG (MaSPQT);
ALTER TABLE MUA_SPQT ADD CONSTRAINT FKMUA_SPQT60017 FOREIGN KEY (DONDATHANGMaDDH) REFERENCES DONDATHANG (MaDDH);
ALTER TABLE MUA_HOATUOI ADD CONSTRAINT FKMUA_HOATUO783158 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE MUA_HOATUOI ADD CONSTRAINT FKMUA_HOATUO864057 FOREIGN KEY (DONDATHANGMaDDH) REFERENCES DONDATHANG (MaDDH);
ALTER TABLE VATLIEU_SPQT ADD CONSTRAINT FKVATLIEU_SP224655 FOREIGN KEY (VATLIEUMaVL) REFERENCES VATLIEU (MaVL);
ALTER TABLE VATLIEU_SPQT ADD CONSTRAINT FKVATLIEU_SP96414 FOREIGN KEY (SANPHAMQUATANGMaSPQT) REFERENCES SANPHAMQUATANG (MaSPQT);
ALTER TABLE NHAN_VATLIEU ADD CONSTRAINT FKNHAN_VATLI586720 FOREIGN KEY (PHIEUNHANHANGMaPNH) REFERENCES PHIEUNHANHANG (MaPNH);
ALTER TABLE NHAN_VATLIEU ADD CONSTRAINT FKNHAN_VATLI492935 FOREIGN KEY (VATLIEUMaVL) REFERENCES VATLIEU (MaVL);
ALTER TABLE DAT_VATLIEU ADD CONSTRAINT FKDAT_VATLIE833530 FOREIGN KEY (PHIEUDATHANGMaPDH) REFERENCES PHIEUDATHANG (MaPDH);
ALTER TABLE DAT_VATLIEU ADD CONSTRAINT FKDAT_VATLIE6279 FOREIGN KEY (VATLIEUMaVL) REFERENCES VATLIEU (MaVL);
ALTER TABLE XINNHAP_VATLIEU ADD CONSTRAINT FKXINNHAP_VA969683 FOREIGN KEY (PHIEUXINNHAPHANGMaPXNH) REFERENCES PHIEUXINNHAPHANG (MaPXNH);
ALTER TABLE XINNHAP_VATLIEU ADD CONSTRAINT FKXINNHAP_VA533037 FOREIGN KEY (VATLIEUMaVL) REFERENCES VATLIEU (MaVL);
ALTER TABLE PHANPHOI_VATLIEU ADD CONSTRAINT FKPHANPHOI_V66485 FOREIGN KEY (PHIEUPHANPHOIMaPPP) REFERENCES PHIEUPHANPHOI (MaPPP);
ALTER TABLE PHANPHOI_VATLIEU ADD CONSTRAINT FKPHANPHOI_V861200 FOREIGN KEY (VATLIEUMaVL) REFERENCES VATLIEU (MaVL);
ALTER TABLE NHAN_HOATUOI ADD CONSTRAINT FKNHAN_HOATU775849 FOREIGN KEY (PHIEUNHANHANGMaPNH) REFERENCES PHIEUNHANHANG (MaPNH);
ALTER TABLE NHAN_HOATUOI ADD CONSTRAINT FKNHAN_HOATU646396 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE DAT_HOATUOI ADD CONSTRAINT FKDAT_HOATUO529039 FOREIGN KEY (PHIEUDATHANGMaPDH) REFERENCES PHIEUDATHANG (MaPDH);
ALTER TABLE DAT_HOATUOI ADD CONSTRAINT FKDAT_HOATUO118773 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE XINNHAP_HOATUOI ADD CONSTRAINT FKXINNHAP_HO332254 FOREIGN KEY (PHIEUXINNHAPHANGMaPXNH) REFERENCES PHIEUXINNHAPHANG (MaPXNH);
ALTER TABLE XINNHAP_HOATUOI ADD CONSTRAINT FKXINNHAP_HO313501 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE PHANPHOI_HOATUOI ADD CONSTRAINT FKPHANPHOI_H703914 FOREIGN KEY (PHIEUPHANPHOIMaPPP) REFERENCES PHIEUPHANPHOI (MaPPP);
ALTER TABLE PHANPHOI_HOATUOI ADD CONSTRAINT FKPHANPHOI_H985337 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE HOATUOI_SPQT ADD CONSTRAINT FKHOATUOI_SP473213 FOREIGN KEY (HOATUOIMaHT) REFERENCES HOATUOI (MaHT);
ALTER TABLE HOATUOI_SPQT ADD CONSTRAINT FKHOATUOI_SP886167 FOREIGN KEY (SANPHAMQUATANGMaSPQT) REFERENCES SANPHAMQUATANG (MaSPQT);

-- PHẦN 4: TẠO TRIGGER
-- NHÓM TRIGGER 1: Trigger tính tổng tiền bảng DonDatHang
-- Các bảng liên quan:
-- DONDATHANG: INSERT, UPDATE(TONGTIENT)
GO
CREATE TRIGGER DONDATHANG_TongTien
ON DONDATHANG
FOR INSERT, UPDATE
AS
IF UPDATE(TongTien)
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_SPMK BIGINT, @SUM_SPQT BIGINT
	UPDATE DONDATHANG
	SET @SUM_HOATUOI = (SELECT SUM(MHT.DonGia * MHT.SoLuong)
						FROM MUA_HOATUOI MHT
						WHERE MHT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPMK = (SELECT SUM(MSPMK.DonGia * MSPMK.SoLuong)
						FROM MUA_SPMK MSPMK
						WHERE MSPMK.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPQT = (SELECT SUM(MSPQT.DonGia * MSPQT.SoLuong)
						FROM MUA_SPQT MSPQT
						WHERE MSPQT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	TongTien = @SUM_HOATUOI + @SUM_SPMK + @SUM_SPQT
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.MaDDH = DONDATHANG.MaDDH)
END
GO

-- MUA_HOATUOI: INSERT, DELETE, UPDATE
GO
CREATE TRIGGER MUA_HOATUOI_TongTien
ON MUA_HOATUOI
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_SPMK BIGINT, @SUM_SPQT BIGINT
	UPDATE DONDATHANG
	SET @SUM_HOATUOI = (SELECT SUM(MHT.DonGia * MHT.SoLuong)
						FROM MUA_HOATUOI MHT
						WHERE MHT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPMK = (SELECT SUM(MSPMK.DonGia * MSPMK.SoLuong)
						FROM MUA_SPMK MSPMK
						WHERE MSPMK.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPQT = (SELECT SUM(MSPQT.DonGia * MSPQT.SoLuong)
						FROM MUA_SPQT MSPQT
						WHERE MSPQT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	TongTien = @SUM_HOATUOI + @SUM_SPMK + @SUM_SPQT
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.DONDATHANGMaDDH = DONDATHANG.MaDDH) OR
		  EXISTS(SELECT * FROM DELETED D
				WHERE D.DONDATHANGMaDDH = DONDATHANG.MaDDH)

END
GO

-- MUA_SPMK: INSERT, DELETE, UPDATE
GO
CREATE TRIGGER MUA_SPMK_TongTien
ON MUA_SPMK
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_SPMK BIGINT, @SUM_SPQT BIGINT
	UPDATE DONDATHANG
	SET @SUM_HOATUOI = (SELECT SUM(MHT.DonGia * MHT.SoLuong)
						FROM MUA_HOATUOI MHT
						WHERE MHT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPMK = (SELECT SUM(MSPMK.DonGia * MSPMK.SoLuong)
						FROM MUA_SPMK MSPMK
						WHERE MSPMK.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPQT = (SELECT SUM(MSPQT.DonGia * MSPQT.SoLuong)
						FROM MUA_SPQT MSPQT
						WHERE MSPQT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	TongTien = @SUM_HOATUOI + @SUM_SPMK + @SUM_SPQT
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.DONDATHANGMaDDH = DONDATHANG.MaDDH) OR
		  EXISTS(SELECT * FROM DELETED D
				WHERE D.DONDATHANGMaDDH = DONDATHANG.MaDDH)

END
GO

-- MUA_SPQT: INSERT, DELETE, UPDATE
GO
CREATE TRIGGER MUA_SPQT_TongTien
ON MUA_SPQT
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_SPMK BIGINT, @SUM_SPQT BIGINT
	UPDATE DONDATHANG
	SET @SUM_HOATUOI = (SELECT SUM(MHT.DonGia * MHT.SoLuong)
						FROM MUA_HOATUOI MHT
						WHERE MHT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPMK = (SELECT SUM(MSPMK.DonGia * MSPMK.SoLuong)
						FROM MUA_SPMK MSPMK
						WHERE MSPMK.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	@SUM_SPQT = (SELECT SUM(MSPQT.DonGia * MSPQT.SoLuong)
						FROM MUA_SPQT MSPQT
						WHERE MSPQT.DONDATHANGMaDDH = DONDATHANG.MaDDH),
	TongTien = @SUM_HOATUOI + @SUM_SPMK + @SUM_SPQT
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.DONDATHANGMaDDH = DONDATHANG.MaDDH) OR
		  EXISTS(SELECT * FROM DELETED D
				WHERE D.DONDATHANGMaDDH = DONDATHANG.MaDDH)
END
GO

-- NHÓM TRIGGER 2: Trigger tính tổng tiền bảng PhieuNhanHang
-- Các bảng liên quan: 
-- PHIEUNHANHANG: INSERT, UPDATE(TONGTIEN)
GO
CREATE TRIGGER PHIEUNHANHANG_TongTien
ON PHIEUNHANHANG
FOR INSERT, UPDATE
AS
IF UPDATE(TongTien)
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_VATLIEU BIGINT
	UPDATE PHIEUNHANHANG
	SET @SUM_HOATUOI = (SELECT SUM(NHT.DonGia * NHT.SoLuong)
						FROM NHAN_HOATUOI NHT
						WHERE NHT.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	@SUM_VATLIEU =		(SELECT SUM(NVL.DonGia * NVL.SoLuong)
						FROM NHAN_VATLIEU NVL
						WHERE NVL.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	TongTien = @SUM_HOATUOI + @SUM_VATLIEU
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.MaPNH = PHIEUNHANHANG.MaPNH)
END
GO

-- NHAN_VATLIEU: INSERT, DELETE, UPDATE
GO
CREATE TRIGGER NHAN_VATLIEU_TongTien
ON NHAN_VATLIEU
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_VATLIEU BIGINT
	UPDATE PHIEUNHANHANG
	SET @SUM_HOATUOI = (SELECT SUM(NHT.DonGia * NHT.SoLuong)
						FROM NHAN_HOATUOI NHT
						WHERE NHT.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	@SUM_VATLIEU =		(SELECT SUM(NVL.DonGia * NVL.SoLuong)
						FROM NHAN_VATLIEU NVL
						WHERE NVL.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	TongTien = @SUM_HOATUOI + @SUM_VATLIEU
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH) OR
		  EXISTS(SELECT * FROM DELETED D
				WHERE D.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH)
END
GO

-- NHAN_HOATUOI: INSERT, DELETE, UPDATE
GO
CREATE TRIGGER NHAN_HOATUOI_TongTien
ON NHAN_HOATUOI
FOR INSERT, UPDATE, DELETE
AS
BEGIN
	DECLARE @SUM_HOATUOI BIGINT, @SUM_VATLIEU BIGINT
	UPDATE PHIEUNHANHANG
	SET @SUM_HOATUOI = (SELECT SUM(NHT.DonGia * NHT.SoLuong)
						FROM NHAN_HOATUOI NHT
						WHERE NHT.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	@SUM_VATLIEU =		(SELECT SUM(NVL.DonGia * NVL.SoLuong)
						FROM NHAN_VATLIEU NVL
						WHERE NVL.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH),
	TongTien = @SUM_HOATUOI + @SUM_VATLIEU
	WHERE EXISTS(SELECT * FROM INSERTED I
				WHERE I.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH) OR
		  EXISTS(SELECT * FROM DELETED D
				WHERE D.PHIEUNHANHANGMaPNH = PHIEUNHANHANG.MaPNH)
END
GO